{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","placeholder","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAQ,OAAMP,GAAN,mBAAqBO,OAC3CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,YAAY,wBACZC,SApBc,SAACR,GACvBF,EAAcE,EAAES,OAAOH,a,+BCNlBI,EAAO,uCAAG,WAAQN,GAAR,uBAAAO,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUT,GAF9C,+DAGAU,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKA,UAAU,QAAQC,IAAMf,EAAMgB,IAAMN,IACzC,4BAAKA,QCFHO,EAAU,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAEdR,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAU,WACNvB,EAAQN,GACH8B,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIvB,CAAE1B,IAGG2B,EDf0BK,CAAchC,GAAlCmB,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDtB,IAElD0B,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEfzBgB,EAAe,WAAO,IAAD,EAEQzC,mBAAS,CAAC,cAFlB,mBAEtB0C,EAFsB,KAEV3C,EAFU,KAI9B,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAf,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCdlCmC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.ace8ffc3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories(category => [ inputValue, ...category ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit } >\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                placeholder=\"Busca tu GIF favorito\"\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n            \r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async ( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=FHBBQDFRJLDL2Mgpak8fPhKXCzlSmbVU`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img className=\"cover\" src={ url } alt={ title } />\r\n           <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images ,loading } = useFetchGifs( category );    \r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => ( \r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                \r\n            });\r\n    },[ category ]);\r\n\r\n\r\n    return state;\r\n}\r\n","import React,{ useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [ categories, setCategories ] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            \r\n            <AddCategory setCategories={ setCategories } />\r\n            <br/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category => ( \r\n                        <GifGrid  \r\n                            key={ category }    \r\n                            category={ category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <GifExpertApp />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}